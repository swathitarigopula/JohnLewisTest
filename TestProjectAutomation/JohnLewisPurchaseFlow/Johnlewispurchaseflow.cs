using OpenQA.Selenium;
using System.Threading;
using TestProject.SDK;
using TestProject.SDK.Tests.Helpers;
using TestProject.SDK.Tests;
using TestProject.Common.Attributes;
using TestProject.Common.Enums;

namespace TestProject.Generated.Tests.JohnLewisPurchaseFlow
{
    /// <summary>
    /// This class was automatically generated by TestProject
    /// Project: JohnLewis Test Project
    /// Test: JohnLewisPurchaseFlow
    /// Generated by: Swathi Tarigopula (swathitarigopula@gmail.com)
    /// Generated on: 04/29/2021 19:58:08
    /// </summary>
    public class Johnlewispurchaseflow : IWebTest
	{
		[ParameterAttribute(Description = "Auto generated application URL parameter", DefaultValue = "https://www.johnlewis.com/", Direction = ParameterDirection.Input)]
		public string ApplicationURL = "https://www.johnlewis.com/";
		[ParameterAttribute(DefaultValue = "laptop", Direction = ParameterDirection.Input)]
		public string SearchTerm = "laptop";
		public ExecutionResult Execute(WebTestHelper helper)
		{
			var driver = helper.Driver;
			var report = helper.Reporter;
			bool boolResult;
			By by;
			
			// set timeout for driver actions (similar to step timeout)
			driver.Timeout = 15000;
			
			 // 1. Navigate to '{{ApplicationURL}}'
			// Navigates the specified URL (Auto-generated)
			// Add step sleep time (Before)
			Thread.Sleep(500);
			boolResult = driver.TestProject().NavigateToURL(ApplicationURL);
			report.Step(string.Format("Navigate to '{0}'", ApplicationURL), boolResult, TakeScreenshotConditionType.Failure);
			
			 // 2. Click 'Allow all'
			// Add step sleep time (Before)
			Thread.Sleep(500);
			by = By.XPath("//button[. = 'Allow all']");
			boolResult = driver.TestProject().Click(by);
			report.Step("Click 'Allow all'", boolResult, TakeScreenshotConditionType.Failure);
			
			 // 3. Click 'search-term'
			// Add step sleep time (Before)
			Thread.Sleep(500);
			by = By.CssSelector("#mobileSearch");
			boolResult = driver.TestProject().Click(by);
			report.Step("Click 'search-term'", boolResult, TakeScreenshotConditionType.Failure);
			
			 // 4. Type '{{SearchTerm}}' in 'search-term'
			// Add step sleep time (Before)
			Thread.Sleep(500);
			by = By.CssSelector("#mobileSearch");
			boolResult = driver.TestProject().TypeText(by, SearchTerm);
			report.Step(string.Format("Type '{0}' in 'search-term'", SearchTerm), boolResult, TakeScreenshotConditionType.Failure);
			
			 // 5. Send 'ENTER' key(s)
			// Add step sleep time (Before)
			Thread.Sleep(500);
			by = By.CssSelector("#mobileSearch");
			boolResult = driver.TestProject().SendKeys("ENTER");
			report.Step("Send 'ENTER' key(s)", boolResult, TakeScreenshotConditionType.Failure);
			
			 // 6. Click 'Google Pixelbook Go GA00526-UK Laptop...'
			// Add step sleep time (Before)
			Thread.Sleep(500);
			by = By.XPath("//h2[. = 'Google Pixelbook Go GA00526-UK Laptop, Intel Core M3 Processor, 8GB RAM, 64GB, 13.3‚Äù Full HD, Just Black']");
			boolResult = driver.TestProject().Click(by);
			report.Step("Click 'Google Pixelbook Go GA00526-UK Laptop...'", boolResult, TakeScreenshotConditionType.Failure);
			
			 // 7. Click 'Add to your basket'
			// Add step sleep time (Before)
			Thread.Sleep(500);
			by = By.XPath("//button[. = 'Add to your basket']");
			boolResult = driver.TestProject().Click(by);
			report.Step("Click 'Add to your basket'", boolResult, TakeScreenshotConditionType.Failure);
			
			 // 8. Scroll window by ('0','742')
			// Add step sleep time (Before)
			Thread.Sleep(500);
			boolResult = driver.TestProject().ScrollWindow(0, 742);
			report.Step("Scroll window by ('0','742')", boolResult, TakeScreenshotConditionType.Failure);
			
			 // 9. Does 'There was a problem adding to your ba...' contain 'There was a problem adding to your basket'?
			// Add step sleep time (Before)
			Thread.Sleep(500);
			by = By.XPath("//h2[. = 'There was a problem adding to your basket']");
			boolResult = driver.TestProject().ContainsText(by, "There was a problem adding to your basket");
			report.Step("Does 'There was a problem adding to your ba...' contain 'There was a problem adding to your basket'?", boolResult, TakeScreenshotConditionType.Failure);
			
			return ExecutionResult.Passed;
		}
	}
}